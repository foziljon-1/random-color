import telebot
import sqlite3
import re


import gspread
from google.oauth2.service_account import Credentials

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–ª—é—á–∞ JSON
json_keyfile = 'AIzaSyDIp2UsaI4Km3AIgJiGFwSoTVzajQg0o5I'

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google –¢–∞–±–ª–∏—Ü–∞–º —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ–∞–π–ª–∞ –∫–ª—é—á–∞ JSON
scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
credentials = Credentials.from_service_account_file(json_keyfile, scopes=scope)
gc = gspread.authorize(credentials)

# –û—Ç–∫—Ä—ã—Ç–∏–µ Google –¢–∞–±–ª–∏—Ü—ã –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
sheet = gc.open('TimaAndMe').sheet1
data = sheet.get_all_records()




# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot("6995631355:AAFTFSSnvqbHZaZV8uVLxVRZanuQOANMN70")
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ email
def is_valid_email(email: str) -> bool:
    email_regex = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    return re.match(email_regex, email) is not None
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –ø–∞—Ä–æ–ª—è
def is_valid_password(password: str) -> bool:
    return len(password) >= 6
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def create_users_table():
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS users
                      (id INTEGER PRIMARY KEY, email TEXT, password TEXT)''')
    conn.commit()
    conn.close()
create_users_table()  # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!ü§ó –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–∞—Ä–æ–ª—å –æ—Ç WI-FI —à–∫–æ–ª—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π email –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ªüòâ')
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å email –∏ –ø–∞—Ä–æ–ª–µ–º
@bot.message_handler(func=lambda message: True)
def register(message):
    # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ email –∏ –ø–∞—Ä–æ–ª—å
    message_text = message.text.split()
    if len(message_text) != 2:
        bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª‚ùóÔ∏èüòä')
        return
    email, password = message_text
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç email –∏ –ø–∞—Ä–æ–ª—è
    if not is_valid_email(email):
        bot.reply_to(message, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email.')
        return
    if not is_valid_password(password):
        bot.reply_to(message, '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤‚ÄºÔ∏è')
        return
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º email –∏ –ø–∞—Ä–æ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    cursor.execute("INSERT INTO users (email, password) VALUES (?, ?)", (email, password))
    conn.commit()
    conn.close()
    bot.reply_to(message, "–ò–∑–≤–µ–Ω–∏—Ç–µ –Ω–æ –Ω–∞—à–∏ —Å–µ—Ä–≤–µ—Ä–∞ –µ—â—ë –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—åüòäüôÉ–°–æ–≤–µ—Ç—É–µ–º –æ–∂–∏–¥–∞—Ç—å –ø–∞—Ä–æ–ª—å –æ—Ç —Å–µ—Ç–µ–π –∫–∞–∫: *O'qituvchi* –∏ *O'quvchi* –≤ –≤–∞—à–µ–π –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ!üòäüôÉ")
# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling()